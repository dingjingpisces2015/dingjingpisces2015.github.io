<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>D Tech Blog</title>
    <description>iOS 开发分享</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 21 Oct 2016 10:50:54 +0800</pubDate>
    <lastBuildDate>Fri, 21 Oct 2016 10:50:54 +0800</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>有关浮点数的那些事</title>
        <description>&lt;h1 id=&quot;section&quot;&gt;有关浮点数的那些事&lt;/h1&gt;

&lt;h2 id=&quot;section-1&quot;&gt;几个小问题&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;浮点数可以准确表示0吗？&lt;/li&gt;
  &lt;li&gt;浮点数精度为什么是1.19092896-e7&lt;/li&gt;
  &lt;li&gt;浮点数是否可以判等？&lt;/li&gt;
  &lt;li&gt;下面两段代码的运行速度如何&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   const float x = 1.1;
   const float z = 1.111;
   float y = x;
   for(int j = 0; j &amp;lt; 10000000; j++)
   {
       y *= x;
       y /= z;
       y += 0;
       y -= 0;
   }
   return 0;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   const float x = 1.1;
   const float z = 1.111;
   float y = x;
   for(int j = 0; j &amp;lt; 10000000; j++)
   {
       y *= x;
       y /= z;
       y += 0.1;
       y -= 0.1;
   }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;本文会从浮点数的表示方法入手回答一下上面的几个问题。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;浮点数的表示方法&lt;/h2&gt;

&lt;p&gt;IEEE-754对浮点数的定义如下&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Type&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Sign&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Actual Exponent&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Exp (biased)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Exponent field&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Significand (fraction field)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Zero&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;−127&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0000 0000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;000 0000 0000 0000 0000 0000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Negative zero&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;−127&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0000 0000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;000 0000 0000 0000 0000 0000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;−0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;One&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;127&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0111 1111&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;000 0000 0000 0000 0000 0000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Minus One&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;127&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0111 1111&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;000 0000 0000 0000 0000 0000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;−1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smallest denormalized number&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;*&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;−126&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0000 0000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;000 0000 0000 0000 0000 0001&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;±2−23 × 2−126 = ±2−149 ≈ ±1.4×10−45&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;“Middle” denormalized number&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;*&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;−126&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0000 0000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100 0000 0000 0000 0000 0000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;±2−1 × 2−126 = ±2−127 ≈ ±5.88×10−39&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Largest denormalized number&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;*&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;−126&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0000 0000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;111 1111 1111 1111 1111 1111&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;±(1−2−23) × 2−126 ≈ ±1.18×10−38&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Smallest normalized number&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;*&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;−126&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0000 0001&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;000 0000 0000 0000 0000 0000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;±2−126 ≈ ±1.18×10−38&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Largest normalized number&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;*&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;127&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;254&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1111 1110&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;111 1111 1111 1111 1111 1111&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;±(2−2−23) × 2127 ≈ ±3.4×1038&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Positive infinity&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;128&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1111 1111&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;000 0000 0000 0000 0000 0000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+∞&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Negative infinity&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;128&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1111 1111&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;000 0000 0000 0000 0000 0000&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;−∞&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Not a number&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;*&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;128&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1111 1111&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;non zero&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;Sign bit can be either 0 or 1 .&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;从上述定义中可以回答第一个问题：&lt;strong&gt;浮点数可以精确表示0&lt;/strong&gt;，用代码验证即&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;float zero1 = 0.0;
float zero2 = 0.0;
if (zero1 == zero2) 
{
	printf(@&quot;zero1 = zero2&quot;); //must setup in if block
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;总结&lt;strong&gt;浮点数定义的规律&lt;/strong&gt;如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;指数位为00000000时，
    &lt;ol&gt;
      &lt;li&gt;数字位为全0时，若符号位为0，则表示正零0.0 ；若符号位为1时，表示负零-0.0&lt;/li&gt;
      &lt;li&gt;数字位不全为零，表示非标浮点数(denormalized number)，此时默认第一位不是1，而是0（标准浮点数为了更大限度的表示数字，认为数字位都是小数点之后的数，并且默认小数点前一位为1）&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;指数位为11111111时，
    &lt;ol&gt;
      &lt;li&gt;数字为全为0时，若符号位为0 ，则表示正无穷，若符号位为1，则表示负无穷&lt;/li&gt;
      &lt;li&gt;数字为补全为0，表示这不是一个数NaN&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;因此指数位范围为00000001~11111110 （1~254）
    &lt;ol&gt;
      &lt;li&gt;而为了表示小数部分，指数部分需要减127，因此，指数实际范围为-126~127，标准浮点数指数能表示的范围也就是 2^-126 ~2^127&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-3&quot;&gt;浮点数的精度&lt;/h2&gt;

&lt;p&gt;浮点数的精度宏FLT_EPSILON = 1.19092896-e7。
IEEE对FLT_EPSILON的定义为&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FLT_EPSILON the minimum positive number such that 1.0 + FLT_EPSILON != 1.0.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;再回到上一章看浮点数，1.0 = 指数位和数字为都为0的数，即&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;指数位&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;数字位&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;01111111&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;000…0000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;而满足上述定义的数只能是在数字位加1的数,即&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;指数位&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;数字位&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;01111111&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;000…000&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;表示出来即2&lt;sup&gt;-23&lt;/sup&gt; = 1.19092896-e7.&lt;/p&gt;

&lt;p&gt;另外，2&lt;sup&gt;-23&lt;/sup&gt; 也代表了浮点数类型能够精确表示的最小一位数，我想把这个值作为浮点数的精度也有这方面的考虑。&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;浮点数的比较&lt;/h2&gt;

&lt;p&gt;首先明确一点，所有浮点数的比较都是通过逐一对比比特的方式进行。&lt;/p&gt;

&lt;p&gt;因此，两个比特位完全一致，用&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;判断完全可行。
如&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;float a = 0.5;
float b = 0.5;
if (a == b)
{
	printf(&quot;isEqual&quot;);\\does executed
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然而我们常见的判等往往会经过一系列运算，并且有经验的老司机都不会直接对浮点数判等使用&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;,而是和FLT_EPSILON作对比，即使这样，浮点数在运算中也常常会出现一些和期望值相悖的情况，比如&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;float y = 1000000.3;
float x = 0.3;
float k = 1000000;
float z = y-k-x;
if (fabsf(z) &amp;lt; FLT_EPSILON) {
   NSLog(@&quot;Z &amp;lt; FLT_EPSILON&quot;);
}
z = y-x-k;
if (fabsf(z) &amp;lt; FLT_EPSILON) {
    NSLog(@&quot;Z &amp;lt; FLT_EPSILON&quot;); \\only this executed
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;直觉上执行&lt;code class=&quot;highlighter-rouge&quot;&gt;y-k-x&lt;/code&gt;也应该等于0， 但是实际情况却相反，出现这种情况就和浮点数的运算有关。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;y-k-x &amp;gt;= FLT_EPSILON&lt;/code&gt;是因为&lt;code class=&quot;highlighter-rouge&quot;&gt;y-k&lt;/code&gt;都是数字较大，指数位较高，在运算过程中实施阶数对其操作的时候舍掉了小数位后0.3的精度，因此，计算出的z值实际是0.01+多。&lt;/p&gt;

&lt;p&gt;因此，&lt;strong&gt;对于浮点数，比较大小永远是一个伪命题&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;对精度要求不高的地方用一用无妨，关键数据一定要用整数类型.&lt;/p&gt;

&lt;h2 id=&quot;denormalized-float&quot;&gt;非规格化浮点数（Denormalized float）&lt;/h2&gt;

&lt;p&gt;对于问题4,相信很多同学会认为+/-0 计算量较小，对运算速度影响小，然而实际测试结果却不是。导致低一段代码性能低的原因为，不断地 y*x/z产生了非规格化浮点数， 而在+/-0的情况下，之后的运算都是Denormalized float之间的运算&lt;/p&gt;

&lt;p&gt;而第二段代码+/- 0.1 实际上提升了运算阶数，使得运算的数值不是Denormalized float.&lt;/p&gt;

&lt;p&gt;github 上有个问答http://stackoverflow.com/questions/9314534/why-does-changing-0-1f-to-0-slow-down-performance-by-10x 有人测试过，使用第一段代码性能比第而段代码&lt;strong&gt;慢十倍&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;链接中大牛们的回答正是这个问题的答案，这都是由于CPU对非规格化浮点数的支持导致的。&lt;/p&gt;

&lt;p&gt;一般的浮点数，默认数字位从小数点后第一位开始，小数点前一位为1.&lt;/p&gt;

&lt;p&gt;而非规格化浮点数为了增加对更小的数字的支持，打破了小数点前一位为1的限制，即将浮点数的表示范围增加了23位（二进制下）。&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;结语&lt;/h2&gt;

&lt;p&gt;关于浮点数的那些事到这结束啦，欢迎大家一起讨论~&lt;/p&gt;

</description>
        <pubDate>Fri, 21 Oct 2016 05:00:00 +0800</pubDate>
        <link>/2016/10/21/%E6%9C%89%E5%85%B3%E6%B5%AE%E7%82%B9%E6%95%B0%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</link>
        <guid isPermaLink="true">/2016/10/21/%E6%9C%89%E5%85%B3%E6%B5%AE%E7%82%B9%E6%95%B0%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</guid>
        
        <category>技术</category>
        
        <category>计算机基础</category>
        
        
      </item>
    
  </channel>
</rss>
